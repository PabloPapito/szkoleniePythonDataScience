Projekt: Analiza wynagrodzeń w branży danych – zgodny z wiedzą z pierwszego dnia
Cel projektu:
Celem projektu jest przeprowadzenie szczegółowej analizy wynagrodzeń w branży danych, w oparciu o wiedzę zdobytą podczas pierwszego dnia szkolenia.
Analiza obejmuje czynniki wpływające na wynagrodzenia, takie jak poziom doświadczenia, lokalizacja oraz wielkość firmy.
W trakcie realizacji projektu uczestnicy będą korzystać z podstawowych narzędzi Pythona, takich jak pętle, funkcje, indeksowanie i slicing, a także zastosują proste techniki wizualizacji danych.

Założenia:
Projekt opiera się na pliku CSV zawierającym informacje o wynagrodzeniach w branży danych. Kluczowe zmienne, które będziemy analizować, to:

salary_in_usd: Wynagrodzenie w USD.
experience_level: Poziom doświadczenia (np. Junior, Senior).
employee_residence: Lokalizacja pracownika.
company_size: Wielkość firmy (mała, średnia, duża).
job_title: Stanowisko.

Kroki projektu:
1. Wczytanie danych i wstępna analiza
  Zadanie: Wczytaj dane z pliku CSV i przeanalizuj podstawowe informacje o strukturze danych.

  Wskazówki:

    - Użyj funkcji pd.read_csv() do wczytania danych.
    - Wyświetl podstawowe informacje o danych za pomocą info(), describe() i head(), aby lepiej zrozumieć dane.
    - Sprawdź dostępne kolumny, używając data.columns.

2. Obliczenia statystyczne dla kolumny wynagrodzeń
Zadanie: Oblicz podstawowe statystyki dla wynagrodzeń w kolumnie salary_in_usd, takie jak średnia, mediana, wartość minimalna, maksymalna oraz odchylenie standardowe.

  Wskazówki:

    - Użyj funkcji wbudowanych, takich jak mean(), median(), min(), max() oraz std(), aby obliczyć te statystyki.
    - Wyświetl liczbę rekordów za pomocą len(), aby sprawdzić, ile osób znajduje się w zbiorze danych.

3. Przekształcanie danych i operacje tekstowe
Zadanie: Zmodyfikuj dane tekstowe, zmieniając wszystkie nazwy stanowisk na wielkie litery, oraz oblicz długość nazw stanowisk.

  Wskazówki:

    - Użyj funkcji str.upper(), aby zmienić wszystkie nazwy stanowisk na wielkie litery.
    - Aby obliczyć długość nazw stanowisk, skorzystaj z funkcji apply() i len(), które zastosujesz do kolumny job_title.

4. Analiza wynagrodzeń w oparciu o poziom doświadczenia
Zadanie: Oblicz średnie wynagrodzenie dla każdego poziomu doświadczenia, używając pętli oraz instrukcji warunkowych.

  Wskazówki:
  
    - Skorzystaj z funkcji unique(), aby uzyskać listę poziomów doświadczenia.
    - Użyj pętli for, aby przejść przez dane i zsumować wynagrodzenia dla każdej kategorii poziomu doświadczenia. Oblicz średnie, dzieląc sumę wynagrodzeń przez liczbę pracowników na danym poziomie.

5. Analiza wynagrodzeń a lokalizacja firmy
Zadanie: Przeanalizuj, jak lokalizacja pracownika wpływa na wynagrodzenia, używając pętli.

  Wskazówki:
  
    - Użyj unique(), aby uzyskać listę lokalizacji.
    - Podobnie jak w zadaniu dotyczącym poziomu doświadczenia, przejdź przez dane i oblicz średnie wynagrodzenie dla każdego kraju za pomocą pętli i instrukcji warunkowych.

6. Wynagrodzenia w zależności od wielkości firmy
Zadanie: Porównaj wynagrodzenia pracowników w zależności od wielkości firmy (company_size).

  Wskazówki:
  
    - Wykorzystaj unique(), aby uzyskać listę unikalnych wielkości firm.
    - Przejdź przez dane i oblicz średnie wynagrodzenie dla każdej wielkości firmy, używając pętli.

7. Tworzenie funkcji porównującej wynagrodzenia z średnią
Zadanie: Stwórz funkcję, która porówna wynagrodzenie danej osoby z średnią wynagrodzeń i wyświetli odpowiedni komunikat.

  Wskazówki:
  
    - Stwórz funkcję compare_to_mean(), która będzie przyjmować dwa argumenty: wynagrodzenie i średnią.
    - Użyj instrukcji if, aby porównać wartości, i zwróć tekst "Powyżej średniej" lub "Poniżej średniej".
    - Zastosuj funkcję do każdej wartości w kolumnie salary_in_usd.

8. Wizualizacja danych
Zadanie: Stwórz histogram wynagrodzeń oraz wykres słupkowy, aby zobaczyć rozkład wynagrodzeń oraz liczebność pracowników na różnych poziomach doświadczenia.

  Wskazówki:
  
    - Użyj funkcji plt.hist(), aby stworzyć histogram wynagrodzeń.
    - Do stworzenia wykresu słupkowego dla poziomów doświadczenia skorzystaj z funkcji plt.bar() i danych z kolumny experience_level.
    - Dodaj tytuł oraz etykiety osi za pomocą plt.title(), plt.xlabel() i plt.ylabel().
    - Wywołaj plt.show(), aby wyświetlić wykresy.
